<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.trusteach.drv.mapper.sys.IDictMapper">

<cache flushInterval="1000000" readOnly="true"></cache>

<!-- 
	private Integer id;
	private String cTypeName;
	private String cDictText;
	private String cDictValue;
	private String cDesc1;
	private String cDesc2;
	private String cDesc3;
	private String cState;
 -->


<sql id="table">table_dicts</sql>
<sql id="pk">id</sql>
<sql id="likeCol">c_typename</sql>
<sql id="colums">
id,c_typename,c_dict_text,c_dict_value,c_des1,c_des2,c_des3,c_state</sql>
<sql id="insertCols">
#{id},#{typeName},#{dictText},#{dictValue},#{desc1},#{desc2},#{desc3},#{state}
</sql>
<sql id="updateCols">
id=#{id},
c_typename=#{typeName},
c_dict_text=#{dictText},
c_dict_value=#{dictValue},
c_des1=#{desc1},
c_des2=#{desc2},
c_des3=#{desc3},
c_state=#{state}
</sql>
<sql id="orderby">c_typename</sql>

<resultMap type="DictModel" id="resultMap">
  <id column="id"  property="id"/>
  <result column="c_typename" property="typeName"/>
  <result column="c_dict_text" property="dictText"/>
  <result column="c_dict_value" property="dictValue"/>
  <result column="c_des1" property="desc1"/>
  <result column="c_des2" property="desc2"/>
  <result column="c_des3" property="desc3"/>
  <result column="c_state" property="state"/>   
</resultMap>


<select id="select" resultType="ArrayList" resultMap="resultMap">
   select <include refid="colums" />
   from <include refid="table" />
   <trim prefix="where" prefixOverrides="and">
     <if test="model.id neq null">and id=#{model.id} </if> 
     <if test="model.typeName neq null">and c_typename=#{model.typeName}</if> 
     <if test="model.dictText neq null">and c_dict_text=#{model.dictText}</if> 
     <if test="model.dictValue neq null">and c_dict_value=#{model.dictValue}</if> 
     
   </trim>

</select>

<select id="selectEqPk"  parameterType="int" resultMap="resultMap">
  select <include refid="colums"/> 
    from <include refid="table"/> 
  where <include refid="pk" /> = #{pObjPk}
</select>

<select id="count" resultType="int">
  select count(*) from <include refid="table"/>
</select>

<select id="selectLikePk" parameterType="String" resultType="ArrayList" resultMap="resultMap" >
   select <include refid="colums"/> 
    from <include refid="table"/>
   where <include refid="likeCol" /> like #{pStrRegexp}
</select>


<select id="selectInPk" resultType="ArrayList" resultMap="resultMap" >
   select <include refid="colums"/> 
    from <include refid="table"/>
   where <include refid="pk" /> in
   <foreach item="pk" collection="list" open="(" separator="," close=")">
      #{pk}
   </foreach> 
</select>

<select id="selectNotInPk" resultType="ArrayList" resultMap="resultMap" >
   select <include refid="colums"/> 
    from <include refid="table"/>
   where <include refid="pk" /> not in
   <foreach item="pk" collection="list" open="(" separator="," close=")">
      #{pk}
   </foreach> 
</select>

<select  id="selectAll"  resultType="ArrayList"  resultMap="resultMap">
  select <include refid="colums"/> 
  from <include refid="table"/> 
  <include refid="orderby"/>
</select>




</mapper>