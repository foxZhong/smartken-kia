<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.smartken.kia.mapper.sys.IDepartmentMapper">

<cache flushInterval="10000" readOnly="true"></cache>

<!-- 

 	private String id;
 	private String fullname;
 	private String nickname;
 	private String company;
 	private String type;
 	private String linkman;
 	private String phone;
 	private String mobile;

 -->

<sql id="table">kia_sys_department</sql>
<sql id="pk">id = #{id}</sql>
<sql id="likeCol">fullname</sql>
<sql id="colums">id,fullname,nickname,company_fk,type_fk,linkman,phone,mobile </sql>
<sql id="insertCols">#{id},#{fullname},#{nickname},#{company},#{type},#{linkman},#{phone},#{mobile}</sql>
<sql id="updateCols">
     fullname=#{fullname},
     nickname=#{nickname},
     company_fk=#{company},
     type_fk=#{type},
     linkman=#{linkman},
     phone=#{phone},
     mobile=#{mobile}
</sql>
<sql id="orderby">fullname</sql>

<resultMap type="DepartmentModel" id="resultMap">
   <result property="id" column="id" />
   <result property="fullname" column="fullname"/>
   <result property="nickname" column="nick"/>
   <result property="company" column="company_fk" />
   <result property="type" column="type_fk" />
   <result property="linkman" column="linkman"/>
   <result property="phone" column="phone"/>
   <result property="mobile" column="mobile"/>
</resultMap>

<select id="selectEqPk"  parameterType="String" resultType="MenuModel" resultMap="resultMap">
  select <include refid="colums"/> 
    from <include refid="table"/> 
  where <include refid="pk" /> = #{pObjPk}
</select>

<select id="selectLikePk" parameterType="String" resultType="MenuModel"  resultMap="resultMap">
   select <include refid="colums"/> 
    from <include refid="table"/>
   where <include refid="likeCol" /> like #{pStrRegexp}
</select>


<select id="selectInPk" resultType="MenuModel"  resultMap="resultMap">
   select <include refid="colums"/> 
    from <include refid="table"/>
   where <include refid="pk" /> in
   <foreach item="pk" collection="list" open="(" separator="," close=")">
      #{pk}
   </foreach> 
</select>

<select id="selectNotInPk" resultType="MenuModel"  resultMap="resultMap">
   select <include refid="colums"/> 
    from <include refid="table"/>
   where <include refid="pk" /> not in
   <foreach item="pk" collection="list" open="(" separator="," close=")">
      #{pk}
   </foreach> 
</select>

<select  id="selectAll"  resultType="ArrayList" resultMap="resultMap">
  select <include refid="colums"/> 
  from <include refid="table"/> 
  <include refid="orderby"/>
</select>

<insert id="insertOne"   parameterType="MenuModel">
   insert into <include refid="table"/> 
     ( <include refid="colums"/> ) values
     ( <include refid="insertCols"/>) 
</insert>

<update id="updateOne" flushCache="true"  parameterType="MenuModel" >
  update <include refid="table"/> set 
       <include refid="updateCols"/>
       where <include refid="pk" />=#{id}
</update>

<delete id="deleteInPk" flushCache="true">
   delete from <include refid="table"/> 
   where <include refid="pk" /> in
   <foreach item="pk" collection="list" open="(" separator="," close=")">
      #{pk}
   </foreach>
</delete>

<delete id="deleteNotInPk" flushCache="true">
   delete from <include refid="table"/> 
   where <include refid="pk" /> not in
   <foreach item="pk" collection="list" open="(" separator="," close=")">
      #{pk}
   </foreach>
</delete>





<select id="selectInToken" resultType="MenuModel"  resultMap="resultMap">
   select <include refid="colums"/> 
    from <include refid="table"/>
   where token in
   <foreach item="pk" collection="list" open="(" separator="," close=")">
      #{pk}
   </foreach> 
</select>


</mapper>